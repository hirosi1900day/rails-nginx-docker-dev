version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.8
  node: circleci/node@5.2.0
  ruby: circleci/ruby@2.1.1

primary: &primary
  image: cimg/ruby:3.1.1-browsers
  environment:
    RAILS_ENV: test
    NODE_ENV: test
    TZ: "Asia/Tokyo"
    LANG: ja_JP.UTF-8
    LC_ALL: C.UTF-8
    LANGUAGE: ja_JP.UTF-8
    ARTIFACTS_DIR: /tmp/artifacts
    TESTRESULTS_DIR: /tmp/results

executors:
  default:
    docker:
      - <<: *primary
  node:
    docker:
      - <<: *primary
        image: cimg/base:2024.02
  rspec:
    docker:
      - <<: *primary
      - image: cimg/mysql:8.0.29
        name: db
        command: mysqld --character_set_server=utf8 --sql-mode=NO_ENGINE_SUBSTITUTION
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_ROOT_HOST: "%"
          PLAYWRIGHT_CHROMIUM_CHANNEL: 'chromium'

commands:
  dependency-install:
    parameters:
      replace-sources-list:
        type: boolean
        default: false
      background-install:
        type: boolean
        default: false
    steps:
      - when:
          condition:
            equal: [<<parameters.replace-sources-list>>, true]
          steps:
            - run:
                name: Replace apt sources list
                command: |
                  sudo sed -i.bak -r 's@http://(jp\.)?archive\.ubuntu\.com/ubuntu/?@https://ftp.udx.icscoe.jp/Linux/ubuntu/@g' /etc/apt/sources.list
      - run:
          name: Install system dependencies
          background: <<parameters.background-install>>
          command: |
            sudo apt update
            sudo apt install libmcrypt-dev libmysqlclient-dev libjemalloc-dev libjemalloc2 gnupg

  install-browser-tools:
    steps:
      # TODO: chromedriverのinstallに失敗していたためバージョンを指定しているが解消されたらバージョン指定を削除する
      #       ref: https://github.com/CircleCI-Public/browser-tools-orb/issues/108
      - browser-tools/install-chrome:
          chrome-version: 116.0.5845.96
          replace-existing: true
      - browser-tools/install-chromedriver

  setup-ruby-ci:
    steps:
      - dependency-install

  bundle-install:
    steps:
      - ruby/install-deps:
          key: gems-v1
          with-cache: true
          clean-bundle: true
          include-branch-in-cache-key: false

  yarn-install:
    steps:
      - node/install:
          install-yarn: true
          node-version: 20.11.1
          yarn-version: 1.22.15
      - node/install-packages:
          pkg-manager: yarn
          include-branch-in-cache-key: false
          cache-version: v7

  # assets-precompile:
  #   steps:
  #     - restore_cache:
  #         name: Restoring Cache - assets:precompile
  #         keys:
  #           - assets-cache-v16-{{ .Branch }}-{{ .Revision }}
  #           - assets-cache-v16-{{ .Branch }}
  #           - assets-cache-v16-develop
  #     - run:
  #         # NOTE: develop, masterブランチで1日毎にキャッシュを削除
  #         name: Remove tmp files on protected branches
  #         command: |
  #           branches=('develop' 'master')
  #           if [ `echo ${branches[@]} | grep -q ${CIRCLE_BRANCH}; echo $?` -a "$(cat tmp/assets-cache-date)" != "$(date '+%Y%m%d')" ]; then
  #             rm -rf tmp/cache/assets
  #             rm -rf node_modules/.cache
  #           fi
  #     - run:
  #         name: assets:precompile
  #         command: |
  #           date '+%Y%m%d' > tmp/assets-cache-date
  #           bin/rails assets:precompile assets:clean[0]
  #     - run:
  #         name: Display disk usage for assets caches
  #         command: du -h -d 1 tmp/cache/ public/assets/ public/packs-test/ node_modules/.cache
  #     - save_cache:
  #         name: Saving Cache - assets:precompile
  #         key: assets-cache-v16-{{ .Branch }}-{{ .Revision }}
  #         paths:
  #           - "./public/assets"
  #           - "./public/packs-test"
  #           - "./tmp/assets-cache-date"
  #           - "./tmp/cache/assets"
  #           - "./node_modules/.cache/babel-loader"
  #           - "./node_modules/.cache/webpack"

  exec-rspec:
    parameters:
      target-path:
        type: string
        default: spec/**/*_spec.rb
      exclude-regex:
        type: string
        default: ^0 # NOTE: defaultはexcludeしないように何にもマッチしない正規表現を設定
      retry-failures:
        type: boolean
        default: true
      failure-exit-code:
        type: integer
        default: 0
    steps:
      - run:
          name: install chromium
          command: yarn playwright install chromium
      - run:
          name: run RSpec
          environment:
            LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
          no_output_timeout: 60s
          command: |
            TEST_FILES=$(circleci tests glob "<<parameters.target-path>>" | sed -E "/<<parameters.exclude-regex>>/d")
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec \
              --failure-exit-code=<<parameters.failure-exit-code>>  \
              --error-exit-code=1 \
              -r rspec_junit_formatter \
              -f RspecJunitFormatter \
              -o ${TESTRESULTS_DIR}/rspec.xml \
              -f progress" \
              --split-by=timings
            # NOTE: circleci tests runコマンドを利用すると、実行結果が出力されるようになっため、
            #       `/tmp/rspec-examples.txt`に出力されたファイル名を抽出する。
            if [ -e ./tmp/rspec-examples.txt]
            then
              grep -o '[^ ]*_spec.rb[^ ]*' ./tmp/rspec-examples.txt | cut -d'[' -f1 | awk '!a[$0]++{print}' > /tmp/rspec_files_list.txt
            fi
            if [ -e coverage/.resultset.json ]
            then
              mv coverage/.resultset.json coverage/.resultset-${CIRCLE_JOB}_${CIRCLE_NODE_INDEX}.json
            fi
      - when:
          condition:
            equal: [<<parameters.retry-failures>>, true]
          steps:
            - run:
                name: run RSpec failures
                environment:
                  LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
                no_output_timeout: 60s
                command: |
                  if cut -f 2 -d '|' ./tmp/rspec-examples.txt | grep -q failed
                  then
                    bundle exec rspec --only-failures
                    if [ -e coverage/.resultset.json ]
                    then
                      mv coverage/.resultset.json coverage/.resultset-${CIRCLE_JOB}_${CIRCLE_NODE_INDEX}-failures.json
                    fi
                  fi
      - run:
          name: mkdir covarage
          command: |
            if [ ! -e coverage ]
            then
              # NOTE: カバレッジを生成しないときでも persist_to_workspace がエラーになるのを回避する
              mkdir coverage
            fi

  setup-database:
    steps:
      - run:
          name: DB setup
          command: |
            bin/rails db:create db:test:prepare

jobs:
  rb-deps:
    executor: default
    parameters:
      bundle_gemfile:
        type: string
        default: Gemfile
    environment:
      BUNDLE_GEMFILE: << parameters.bundle_gemfile >>
    steps:
      - setup-ruby-ci
      - bundle-install

  assets:
    executor: default
    resource_class: large
    parameters:
      bundle_gemfile:
        type: string
        default: Gemfile
    environment:
      BUNDLE_GEMFILE: << parameters.bundle_gemfile >>
    steps:
      - setup-ruby-ci
      - bundle-install
      - yarn-install
      - run: ln -s secrets.yml.development config/secrets.yml
      # - assets-precompile
      - persist_to_workspace:
          root: .
          paths:
            - "./public/assets"
            - "./public/packs-test"
            - "./tmp/cache/bootsnap"
            # NOTE: CKEditor関連はnode_modules配下のファイルを利用するため引き継ぐ
            - "./node_modules/ckeditor"

  rspec:
    executor: rspec
    parallelism: 12
    resource_class: medium
    parameters:
      bundle_gemfile:
        type: string
        default: Gemfile
    environment:
      BUNDLE_GEMFILE: << parameters.bundle_gemfile >>
    steps:
      - setup-ruby-ci
      - bundle-install
      - run: ln -s secrets.yml.development config/secrets.yml
      - setup-database
      - run:
          name: run eager loading check
          command: bin/rails runner Rails.application.eager_load!
      - exec-rspec:
          retry-failures: true
          failure-exit-code: 0
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/rspec_files_list.txt
      - persist_to_workspace:
          root: .
          paths:
            - coverage/
  coverage:
    executor: default
    resource_class: small
    steps:
      - setup-ruby-ci
      - attach_workspace:
          at: .
      - bundle-install
      - run: bin/rails coverage:report
      - store_artifacts:
          path: coverage

workflows:
  build_and_analyze:
    jobs:
      - rb-deps
      - assets:
          requires:
            - rb-deps
      - rspec:
          requires:
            - rb-deps
      - coverage:
          requires:
            - rspec
          filters:
            branches:
              only:
                - master
                - /.*coverage.*/