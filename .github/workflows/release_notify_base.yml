name: test_deploy_prod

on:
  workflow_run:
    workflows: ["RSpec-Tests"]
    types:
      - completed

permissions:
  contents: read
  deployments: write

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      deploy_id: ${{ steps.create_deploy.outputs.result }}
    steps:
      - name: Create a deployment
        id: create_deploy
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'test_prod',
              auto_merge: false,
              required_contexts: ['RSpec-Tests / rspec'],
            });

            const log_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: "in_progress",
              log_url,
            });
            return deployment.id;

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: test
        run: sleep 60

  post-deploy:
    needs: [pre-deploy, deploy]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Create a deployment status
        uses: actions/github-script@v7
        with:
          previews: ant-man-preview
          script: |
            const deployment_id = "${{ needs.pre-deploy.outputs.deploy_id }}";
            const state = "${{ (needs.deploy.result == 'success' && 'success') || (needs.deploy.result == 'cancelled' && 'waiting') || 'failure' }}";
            const log_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id,
              state,
              log_url,
            });
