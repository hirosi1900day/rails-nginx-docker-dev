name: release_notify

on:
  pull_request:
    branches: [master]

permissions:
  contents: read
  deployments: write

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    # NOTE: 本番デプロイは基本的に master ブランチからのデプロイのみを許容する
    timeout-minutes: 1
    outputs:
      deploy-sha: ${{ steps.get-sha.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10 # 次のステップで parent commit を取得するために多めに取得している
      # NOTE: マージしたdevelopブランチの最新のSHAを取得
      - name: Get deploy SHA
        id: get-sha
        run: |
          parent_commit=$(git rev-list --parents -n 1 HEAD | awk '{print $3}')
          echo "result=$parent_commit" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: [pre-deploy]
    if: needs.pre-deploy.outputs.deploy-sha
    steps:
      - name: Test
        run: |
          echo ${{ needs.pre-deploy.outputs.deploy-sha }}
  base:
    needs: [test]
    uses: ./.github/workflows/release_notify_base.yml
  test2:
    needs: [base]
    runs-on: ubuntu-latest
    steps:
      - name: Test2
        run: echo ${{ github.event.pull_request.merged }}
  notify-authors:
    needs: [test]
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
    - name: Notify authors
      run: |
        # リリースPRに含まれるコミットメッセージを取得
        COMMIT_MESSAGES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }}/commits" | \
            jq -r '.[].commit.message')

        # コミットメッセージからPR番号を抽出
        PR_NUMBERS=$(echo "$COMMIT_MESSAGES" | grep -o "#[0-9]*" | tr -d '#')

        # PR番号からPRの作者を取得し、コメントを投稿
        for PR_NUMBER in $PR_NUMBERS; do
          AUTHOR_LOGIN=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER" | \
            jq -r .user.login)

          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -X POST -d "{\"body\":\"@${AUTHOR_LOGIN} このPRはデプロイされました。\"}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$PR_NUMBER/comments"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}