inherit_from: .rubocop_todo.yml

# This file overrides https://github.com/bbatsov/rubocop/blob/master/config/default.yml
require:
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec
  - rubocop-capybara
  - rubocop-factory_bot
  - test_prof/rubocop
  - ./lib/medpeer_cop
  - ./lib/patches/rubocop_security_yaml_load_check_psych_version.rb

inherit_mode:
  merge:
    - Exclude

AllCops:
  Exclude:
    - 'db/*_schema.rb'
    - 'db/*migrate/*'
    - 'config/initializers/sorcery.rb'
    # rails本体のI18n定義そのものなのでチェック対象外にする
    - 'config/locales/ja.rb'
  NewCops: disable

# Align the elements of an array literal if they span more than one line
Layout/ArrayAlignment:
  Enabled: false

Layout/HashAlignment:
  Enabled: false

Layout/FirstArrayElementIndentation:
  Exclude:
    - 'db/fixtures/**/*'

Layout/EmptyLineAfterMagicComment:
  Include:
    - 'app/**/channel/**/*'
    - 'app/**/icc/**/*'
    - 'config/routes/*'
    - 'spec/**/*.rb'

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: false

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: false

Layout/HeredocIndentation:
  Enabled: false

# Checks indentation of method calls with the dot operator
# that span more than one line
Layout/MultilineMethodCallIndentation:
  Enabled: false

# Checks indentation of binary operations that span more than one line
Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Lint/AmbiguousBlockAssociation:
  Enabled: false

Lint/DeprecatedOpenSSLConstant:
  Enabled: false

# Align ends corresponding to defs correctly
# http://www.rubydoc.info/github/bbatsov/rubocop/master/Rubocop/Cop/Lint/EndAlignment
# keyword = if true
#           end
# variable = if true
# end
Layout/EndAlignment:
  EnforcedStyleAlignWith: variable

Lint/MixedRegexpCaptureTypes:
  Enabled: false

Lint/RaiseException:
  Enabled: false

Lint/StructNewOverride:
  Enabled: false

# 空のrescue節をチェック
# https://rubocop.readthedocs.io/en/latest/cops_lint/#lintsuppressedexception
Lint/SuppressedException:
  Enabled: false

# Checks that ABC (Assignment Branch Condition) size is not higher than the configured maximum
Metrics/AbcSize:
  # デフォルトの15は厳しすぎるので緩めている。25は守りたい
  Max: 25
  Exclude:
    - 'app/controllers/concerns/authenticatable.rb'

# Avoid long blocks with many lines
Metrics/BlockLength:
  # ファイル丸ごとブロックに入りそうなファイルは行数制限から外す
  Exclude:
    - "**/*_spec.rb"
    - "**/*.rake"
    - "**/*.json.jbuilder"
    - 'db/fixtures/**/*'
    - 'spec/factories/**/*.rb'
    - "spec/support/*.rb"
    - "spec/rails_helper.rb"
    - "config/environments/*.rb"
    - "config/routes.rb"
    - "config/routes/*.rb"

# Avoid classes longer than some maximum lines of code
Metrics/ClassLength:
  Max: 300

# Limit lines to some maximum characters
Layout/LineLength:
  Max: 120
  Exclude:
    - 'spec/**/*.rb'
    # テストデータ用のコードは横に長くなりがちなのでチェック対象外
    - 'db/fixtures/**/*'

# Avoid methods longer than some maximum lines of code
Metrics/MethodLength:
  Max: 20

# Avoid modules longer than some maximum lines of code
Metrics/ModuleLength:
  Max: 300

# has_ から始まるメソッドは許可する
Naming/PredicateName:
  ForbiddenPrefixes:
    - "is_"
    - "have_"
  NamePrefix:
    - "is_"
    - "have_"

# 3 文字未満だと指摘されるが、未使用を示す _ や e(rror), b(lock),
# n(umber) といった 1 文字変数は頻出するし、前置詞(by, to, ...)や
# よく知られた省略語 (op: operator とか pk: primary key とか) も妥当。
# 変数 s にどんな文字列かを形容したい場合と、不要な場合とがある＝無効
Naming/MethodParameterName:
  Enabled: false

# Use only ascii symbols in comments
Style/AsciiComments:
  Enabled: false

# Avoid using {...} for multi-line blocks (multiline chaining is always ugly).
# Prefer {...} over do...end for single-line blocks
Style/BlockDelimiters:
  Enabled: false

# Checks style of children classes and modules
Style/ClassAndModuleChildren:
  Enabled: false

# Enforces consistent use of `Object#is_a?` or `Object#kind_of?`
Style/ClassCheck:
  Enabled: false

# Checks for uses of unidiomatic method names from the Enumerable module
Style/CollectionMethods:
  Enabled: true
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    inject: false
    detect: false
    find_all: false

# Document classes and non-namespace modules
Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  Enabled: false

Style/ExponentialNotation:
  Enabled: false

# This cop is designed to help upgrade to Ruby 3.0.
# It will add the comment `# frozen_string_literal: true` to enable frozen string literals
Style/FrozenStringLiteralComment:
  Include:
    - 'app/**/channel/**/*'
    - 'app/**/icc/**/*'
    - 'config/routes/*'
    - 'spec/**/*'

# Favor modifier if/unless usage when you have a single-line body.
Style/IfUnlessModifier:
  Enabled: false

# Checks for uses of the lambda literal syntax for single line lambdas,
# and the method call syntax for multiline lambdas
Style/Lambda:
  # Scopeは複数行でも`-> { }`形式で揃えた方が見た目が綺麗だが、
  # その他のケースでは`lambda do-end`を使ったほうが見やすい時もあるので。
  Enabled: false

Style/RedundantFetchBlock:
  Enabled: false

Style/RedundantRegexpCharacterClass:
  Enabled: false

Style/RedundantRegexpEscape:
  Enabled: false

# %記法の囲い文字チェック
# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/PercentLiteralDelimiters
# cf.) http://qiita.com/tbpgr/items/abebdab1b524be2ef9f4
Style/PercentLiteralDelimiters:
  Enabled: false

Style/SlicingWithRange:
  Enabled: false

# Checks for proper usage of fail and raise
Style/SignalException:
  Enabled: false

# Enforces the names of some block params
Style/SingleLineBlockParams:
  Enabled: false

# Checks if uses of quotes match the configured preference
Style/StringLiterals:
  Enabled: false

# Prefer `to_sym` over `intern`
Style/StringMethods:
  PreferredMethods:
    intern: to_sym
  Enabled: true

Style/SymbolArray:
  Enabled: false

# Checks for trailing comma in array and hash literals
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

# 文字列の配列を %w() で書いているか
# http://www.rubydoc.info/github/bbatsov/rubocop/Rubocop/Cop/Style/WordArray
Style/WordArray:
  Enabled: false

# Checks for use of parentheses around ternary conditions.
Style/TernaryParentheses:
  Enabled: false

# NOTE: Ruby 3.1で`hash value omission`が追加されたが、
# 既存コードへの影響が大きいので旧来の書き方も許容するように調整
Style/HashSyntax:
  EnforcedShorthandSyntax: either

Rails/DynamicFindBy:
  Whitelist:
    - find_by_sql
    - find_by_obfuscated_id
    - find_by_obfuscated_id!
    - find_by_hashid
    - find_by_hashid!

Rails/LinkToBlank:
  Enabled: false

Rails/Present:
  Enabled: false

Rails/OutputSafety:
  Enabled: false

Rails/UnknownEnv:
  Environments:
    - development
    - test
    - production
    - staging

RSpec/AggregateExamples:
  AddAggregateFailuresMetadata: false
  Include:
    - 'spec/system/admin/**/*_spec.rb'

Rails/ApplicationController:
  Exclude:
    # テストで使うダミー用のコントローラなので対象外にする
    - 'spec/support/dummies_controller.rb'
    - 'spec/support/test_sessions_controller.rb'

Rails/RakeEnvironment:
  Exclude:
    - 'lib/tasks/auto_annotate_models.rake'
    - 'lib/tasks/coverage_report.rake'

Style/FormatStringToken:
  AllowedMethods:
    - redirect

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true
  Exclude:
    - 'app/models/admin/lounge/theme_search_form.rb'
    - 'app/models/admin/search_form.rb'
    - 'app/models/conference/watch_log/generator.rb'

# feature というカラム名がテストケースだと誤検知されrubocopに引っかかるので exclude している
RSpec/EmptyExampleGroup:
  Exclude:
    - 'spec/factories/**/*'
RSpec/MissingExampleGroupArgument:
  Exclude:
    - 'spec/factories/**/*'

RSpec/Pending:
  Enabled: true

# TODO: Rails 6のアップグレードとは別で対応したいので一旦無効にする。
Rails/IndexWith:
  Enabled: false

Performance/MapCompact:
  Enabled: true

# 該当アクションを定義している親クラスを継承しており、コントローラで同一のアクション再定義する必要がないため
Rails/LexicallyScopedActionFilter:
  Exclude:
    - "app/controllers/admin/**/*_controller.rb"

RSpec/MatchArray:
  Enabled: false

RSpec/ContainExactly:
  Enabled: false

# `InverseMethods` are methods that can be inverted by a not (`not` or `!`)
Style/InverseMethods:
  InverseMethods:
    :present?: :blank?
    :include?: :exclude?
    :valid?: :invalid?
